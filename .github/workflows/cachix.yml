name: "Cachix Binary Cache"
on:
  pull_request:
  push:
  workflow_dispatch:
jobs:
  nix-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v30
      - id: set-matrix
        name: Generate Nix Matrix
        run: |
          set -Eeu
          matrix="$(nix eval --json '.#githubActions.matrix')"
          echo "matrix=$matrix" >> "$GITHUB_OUTPUT"
  nix-build:
    name: ${{ matrix.name }} (${{ matrix.system }})
    needs: nix-matrix
    runs-on: ${{ matrix.os }}
    strategy:
      matrix: ${{fromJSON(needs.nix-matrix.outputs.matrix)}}
    steps:
      - uses: actions/checkout@v4
      - name: Free Disk Space Before Build
        run: |
          sudo rm -rf /usr/local/.ghcup
          sudo rm -rf /opt/hostedtoolcache/CodeQL
          sudo rm -rf /usr/local/lib/android/sdk/ndk
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf /usr/local/share/boost
      - uses: cachix/install-nix-action@v30
      - uses: cachix/cachix-action@v14
        with:
         name: 0x006e-nix
         authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
         installCommand: nix profile install --accept-flake-config nixpkgs#cachix
      - uses: DeterminateSystems/magic-nix-cache-action@v2
      - run: nix build -L '.#${{ matrix.attr }}' 
      - run: nix build -L '.#${{ matrix.attr }}' | jq -r '.[].outputs | to_entries[].value' | cachix push 0x006e-nix
